name: Multi-arch Build on Tag

on:
  push:
    tags: ['v*']  # 只在 v 开头的标签推送时触发

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            docker_platform: linux/amd64
            suffix: x86_64
          - arch: arm64
            docker_platform: linux/arm64
            suffix: aarch64
    steps:
    - uses: actions/checkout@v4
    
    # 获取版本号（去掉 v 前缀）
    - name: Get version
      id: get-version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "TAG_NAME=v$VERSION" >> $GITHUB_ENV
        
    # 设置多平台构建环境
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # 安装构建工具
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        
    # 执行构建
    - name: Build for ${{ matrix.arch }}
      run: |
        make ARCH=${{ matrix.arch }} VERSION=$VERSION

    - name: Debug variables
      run: |
        echo "VERSION=${VERSION}"
        echo "SUFFIX=${{ matrix.suffix }}"
        echo "Full path: release/pagemap-${VERSION}-linux-${{ matrix.suffix }}.tar.gz"   

    # 准备发布文件
    - name: Package artifacts
      run: |
        mkdir -p release
        tar -czvf release/pagemap-${VERSION}-linux-${{ matrix.suffix }}.tar.gz -C output .
        
    # 创建临时 Release（如果尚未存在）
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        draft: false
        prerelease: false
        allow_updates: true

    # 上传构建产物到 Release
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/pagemap-${VERSION}-linux-${{ matrix.suffix }}.tar.gz
        asset_name: pagemap-${VERSION}-linux-${{ matrix.suffix }}.tar.gz
        asset_content_type: application/gzip
